% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlap_wrappers.R
\name{overlapDegsmCAWrapper}
\alias{overlapDegsmCAWrapper}
\title{Generate Overlap Plots for Differential Gene Expression and Methylation Analysis}
\usage{
overlapDegsmCAWrapper(
  degs.dat,
  count.dat,
  refseq,
  WT1.idx,
  WT2.idx,
  bin.size,
  shift.size,
  methyl.type,
  degs = TRUE
)
}
\arguments{
\item{degs.dat}{A dataframe containing DEGs results from differential expression 
analysis, such as from `DESeqCalculation`. The dataframe should include gene names, 
log fold changes, gene lengths, and FDR values.}

\item{count.dat}{A dataframe with counts data from which log2 fold changes will be 
calculated. It should have gene names and count data for each sample.}

\item{refseq}{A dataframe with reference sequence information including methylation data 
(mCA/CA), to be joined with `degs.dat`.}

\item{WT1.idx}{Indices of the first control group samples in `count.dat`.}

\item{WT2.idx}{Indices of the second control group samples in `count.dat`.}

\item{bin.size}{The size of the bin for calculating running averages in the plot.}

\item{shift.size}{The step size for the moving window when calculating running averages.}

\item{methyl.type}{A string indicating the type of methylation context, typically "mCA/CA".}

\item{degs}{Logical flag indicating whether to filter `degs.dat` by FDR < 0.05 
to consider only significant DEGs. Defaults to `TRUE`.}
}
\value{
A list containing the overlay plot object generated by `overlaymC` and other 
relevant data for further analysis.
}
\description{
This function creates overlap plots for differentially expressed genes (DEGs) with 
methylation data. It performs an inner join between DEGs data and reference sequence 
information, computes log2 fold changes between control groups, and then calls the 
`overlaymC` function to generate the plots, which illustrate log2 fold change versus 
mean gene length, including methylation context (mCA/CA).
}
\examples{
\dontrun{
load(file = "path/to/mm10_ncbi-refSeqGene_Dec2019.RData")
mCA <- data.frame(readRDS("path/to/CAperGene_10wk_boxer.RDS"), stringsAsFactors = FALSE)
mCA <- mCA[mCA$CA >= 5 & mCA$gene.length >= 4500,]
mCA$mCA.CA <- mCA$mCA/mCA$CA
mCA1 <- mCA[, c(1, 6, 7)]

degs.dat <- read.table("path/to/KO-WT_whole-cell_RNA-seq.txt", 
                       sep = "\t", header = TRUE, row.names = 1, 
                       stringsAsFactors = FALSE)
mat <- wholeCell.KO$results[, c(8:27, 1, 3)]
colnames(mat)[21] <- "gene.name"

grp.idx <- WTgrpKmeans(control_mat = mat[, 1:10])
if(length(grp.idx$WT.idx1) != length(grp.idx$WT.idx2)){
  message("Cluster size is not equal, running equal size k-means variation.")
  grp.idx <- WTgrpKmeansEqualSize(control_mat = mat[, 1:10])
}

res <- overlapDegsmCAWrapper(degs.dat = degs.dat, count.dat = mat, 
                             refseq = mCA1, WT1.idx = grp.idx$WT.idx1, 
                             WT2.idx = grp.idx$WT.idx2, bin.size = 60, 
                             shift.size = 6, methyl.type = "mCA/CA")
print(res$plot)
}
}

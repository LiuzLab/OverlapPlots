% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlap_wrappers.R
\name{WTgrpKmeansEqualSize}
\alias{WTgrpKmeansEqualSize}
\title{Equal Size K-Means Clustering on Control Group Data}
\usage{
WTgrpKmeansEqualSize(control_mat, centers = 2, iter.max = 1000)
}
\arguments{
\item{control_mat}{A matrix or dataframe containing the control (WT) subset 
from differential expression analysis results. Rows correspond to genes and 
columns to samples.}

\item{centers}{The desired number of clusters to find within the control data. 
Defaults to 2.}

\item{iter.max}{The maximum number of iterations allowed for the k-means 
algorithm. Defaults to 1000.}
}
\value{
A list containing two elements: `WT.idx1` and `WT.idx2`, which are 
indices of the control samples assigned to clusters 1 and 2, respectively.
}
\description{
Performs a variation of k-means clustering on the control (WT) subset from 
differential expression analysis results to create clusters of approximately 
equal size. This method modifies the standard k-means approach by ordering 
points based on their distance to the closest center minus the distance to 
the farthest cluster and then assigns each point to the best cluster in this order.
The method aims to address the challenge of unequal cluster sizes often 
encountered in standard k-means.
}
\examples{
# Simulate gene expression data for a control group
set.seed(123) # For reproducibility
control_data <- rbind(
  matrix(rnorm(1000, sd = 0.3), ncol = 10),
  matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10)
)
colnames(control_data) <- paste0("Sample", 1:10)
rownames(control_data) <- paste0("Gene", 1:100)

# Perform equal size k-means clustering
kmeans_results <- WTgrpKmeansEqualSize(control_mat = control_data)

# kmeans_results$WT.idx1 contains indices of samples in cluster 1
# kmeans_results$WT.idx2 contains indices of samples in cluster 2
}

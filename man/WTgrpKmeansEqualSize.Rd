% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlap_wrappers.R
\name{WTgrpKmeansEqualSize}
\alias{WTgrpKmeansEqualSize}
\title{Equal Size K-Means Clustering on Control Group Data}
\usage{
WTgrpKmeansEqualSize(control_mat, centers = 2, iter.max = 1000)
}
\arguments{
\item{control_mat}{A matrix or dataframe representing the control (WT) subset 
from differential expression analysis. Rows should correspond to genes and 
columns to samples. The data structure should facilitate computation of distances 
between samples and cluster centers.}

\item{centers}{The number of clusters to be generated. The default value is 2. 
It should be a positive integer less than the number of samples in control_mat.}

\item{iter.max}{The maximum number of iterations for the k-means algorithm. 
This parameter allows control over the computational intensity of the function. 
The default value is 1000.}
}
\value{
A list containing indices of the control samples assigned to each cluster. 
The list has two elements: `WT.idx1` for the first cluster and `WT.idx2` for the 
second cluster. These indices can be used for further subgroup analyses within the 
control group.
}
\description{
`WTgrpKmeansEqualSize` function applies a modified version of k-means clustering 
to control (WT) group data from differential expression analysis. This adaptation 
is designed to create clusters of approximately equal size, a common challenge 
in standard k-means clustering. It achieves this by assigning points to clusters 
based on their relative distances to the nearest and farthest cluster centers, 
thereby ensuring a more balanced distribution among clusters.
}
\examples{
\dontrun{
# Example dataset creation
mat <- rbind(matrix(rnorm(1000, sd = 0.3), ncol = 10),
            matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10))
# Applying the equal size k-means clustering
result <- WTgrpKmeansEqualSize(control_mat = mat)
# Displaying the indices of the two clusters
print(result$WT.idx1)
print(result$WT.idx2)
}
mat <- rbind(matrix(rnorm(1000, sd = 0.3), ncol = 10),
matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10))
WTgrpKmeans(control_mat = mat)
}

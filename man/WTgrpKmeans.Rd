% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlap_wrappers.R
\name{WTgrpKmeans}
\alias{WTgrpKmeans}
\title{Perform K-Means Clustering on Control Group Data}
\usage{
WTgrpKmeans(control_mat, centers = 2, iter.max = 1000)
}
\arguments{
\item{control_mat}{A matrix or dataframe containing the control (WT) subset from the
differential expression analysis results. Rows correspond to genes and columns to samples.}

\item{centers}{The desired number of clusters (centers) to find within the control data.
Defaults to 2.}

\item{iter.max}{The maximum number of iterations allowed for the k-means algorithm.
Defaults to 1000.}
}
\value{
A list with two elements, each containing the indices of the control samples
assigned to cluster 1 and cluster 2, respectively. The list elements are named `WT.idx1`
and `WT.idx2`.
}
\description{
Performs k-means clustering on a control (WT) subset from differential expression analysis results.
This function is designed to identify patterns or groups within control samples based on their gene
expression profiles. It uses the standard k-means clustering algorithm to partition samples into a
specified number of clusters and returns the indices of samples in each cluster.
}
\examples{
# Simulate gene expression data for a control group with two distinct patterns
set.seed(123) # For reproducibility
control_data <- rbind(
  matrix(rnorm(500, sd = 0.3), ncol = 10),
  matrix(rnorm(500, mean = 1, sd = 0.3), ncol = 10)
)
colnames(control_data) <- paste0("Sample", 1:10)
rownames(control_data) <- paste0("Gene", 1:100)

# Perform k-means clustering
kmeans_results <- WTgrpKmeans(control_mat = control_data)

# kmeans_results$WT.idx1 contains indices of samples in cluster 1
# kmeans_results$WT.idx2 contains indices of samples in cluster 2
}

chromatin.KO <- DESeqCalculation(dat = dat, genotypes = genotypes, fc = 1.15)
mat <- chromatin.KO$results[,c(8:27,1,3)]
colnames(mat)[21] <- "gene.name"
grp.idx <- WTgrp_kmeans(control_mat = mat[,1:10])
if(length(grp.idx$WT.idx1) != length(grp.idx$WT.idx2)){
message("Cluster size is not equal, therefore run same size k-means variation!")
grp.idx <- WTgrp_kmeans_eqSize(control_mat = mat[,1:10])
}
res7 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 200,
shift.size = 40)
res7$plot
### Using the DEGs list
degs.dat <- read.table("../dat/DEGs/KO-WT_chromatin_RNA-seq.txt", sep = "\t",
stringsAsFactors=F, header = TRUE, row.names = 1)
degs.dat <- degs.dat[degs.dat$FDR < 0.05,]
cat("Number of DEGs =",dim(degs.dat)[1],"\n\n")
degs.dat <- inner_join(degs.dat %>% rownames_to_column(var = "gene.name"),
refseq, by = "gene.name")
Plot.Scatter(dat = degs.dat[,c("gene.name","logFC", "FDR", "gene.length")],
log2FC = log2(1), comp.between = "")
Plot.Scatter(dat = degs.dat[,c("gene.name","logFC", "FDR", "gene.length")],
log2FC = log2(1.2), comp.between = "")
degs.dat <- inner_join(x = chromatin.KO$results[chromatin.KO$results$gene %in%
degs.dat$gene.name,c(8:27,1,3)],
y = degs.dat[,c("gene.name", "logFC")],
by = c("gene" = "gene.name"))
mat <- degs.dat[,c(1:21,23)]
colnames(mat)[21] <- "gene.name"
### logFC from Degs from edgeR (Boxer et al.) and
### much closer to the Boxer et al. paper
colnames(mat)[22] <- "log2FoldChange"
res8 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 40,
shift.size = 4, shrink_lfc = T)
res8$plot
### logFC from Degs from DESeq2
mat <- degs.dat[,c(1:22)]
colnames(mat)[21] <- "gene.name"
res9 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 40,
shift.size = 4, shrink_lfc = T)
res9$plot
rm(dat, chromatin.KO, mat, grp.idx, degs.dat)
### overlap_degs_wrapper
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
BiocCheck()
devtools::load_all()
library(BiocCheck)
BiocCheck()
devtools::load_all()
BiocCheck()
devtools::load_all()
devtools::load_all()
devtools::load_all()
BiocCheck()
??DESeq2
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::build_site()
devtools::load_all()
devtools::document()
devtools::build_site()
devtools::document()
devtools::load_all()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::load_all()
devtools::build_site()
devtools::document()
devtools::document()
devtools::build_site()
dat <- matrix(rbinom(100,20,0.6),ncol=10)
colnames(dat) <- c("MeCP2_WT_1",	"MeCP2_WT_2".	"MeCP2_WT_3", "MeCP2_WT_4",	"MeCP2_WT_5",	"MeCP2_KO_1",	"MeCP2_KO_2", "MeCP2_KO_3", "MeCP2_KO_4",	"MeCP2_KO_5")
devtools::document()
devtools::build_site()
??DESeq2
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
cnts <- matrix(rnbinom(n=1000, mu=100, size=1/0.5), ncol=10)
cnts
devtools::document()
devtools::document()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::build_site()
devtools::document()
devtools::build_site()
vec <- seq(1,500, by = 1)
vec
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
load("~/longene2/dat-info/mm10_ncbi-refSeqGene_Dec2019.RData")
View(refseq)
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::document()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
1:3
4:6
7:9
devtools::document()
devtools::build_site()
devtools::load_all()
devtools::document()
mat <- rbind(matrix(rnorm(1000, sd = 0.3), ncol = 2),matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 2))
logofMeans.between.A.B(dat = mat, A.samples = 1, B.samples = 2)
logofMeans.between.A.B(dat = mat, A.samples = 1:2, B.samples = 1:2)
logofMeans.between.A.B(dat = mat, A.samples = c("1","2"), B.samples = 1:2)
logofMeans.between.A.B(dat = mat, A.samples = 1:2, B.samples = 1)
mat <- matrix(rnorm(1000, sd = 0.3), ncol = 10)
logofMeans.between.A.B(dat = mat, A.samples = c(1,2,3), B.samples = c(4,5,6))
logofMeans.between.A.B(dat = mat, A.samples = c(1,2,3), B.samples = c(4,5))
logofMeans.between.A.B(dat = mat, A.samples = c(1,2,3), B.samples = c(4))
mat
mat[,1:3]
k <- apply(mat[,1:3],1,function(r) {(mean(r))}
)
k
mat <- rbind(matrix(rnorm(1000, sd = 0.3), ncol = 10), matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 10))
logofMeans.between.A.B(dat = mat, A.samples = 1:3, B.samples = 1:3)
colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
mat
?colnames
mat <- rbind(matrix(rnorm(1000, sd = 0.3), ncol = 6), matrix(rnorm(1000, mean = 1, sd = 0.3), ncol = 6))
mat <- rbind(matrix(rnorm(600, sd = 0.3), ncol = 6), matrix(rnorm(600, mean = 1, sd = 0.3), ncol = 6))
colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
logofMeans.between.A.B(dat = mat, A.samples = 1:3, B.samples = 1:3)
devtools::document()
devtools::build_site()
devtools::check()
library(BiocCheck)
BiocCheck()
devtools::document()
devtools::load_all()
devtools::check()
usethis::use_vignette("my-vignette")
devtools::check()
library(BiocCheck)
BiocCheck()
devtools::load_all()
devtools::document()
mat <- rbind(matrix(rnorm(600, sd = 0.3), ncol = 6), matrix(rnorm(600, mean = 1, sd = 0.3), ncol = 6))
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
logofMeans.between.A.B(dat = mat, A.samples = 1:3, B.samples = 1:3)
mat
mat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
mat
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
logofMeans.between.A.B(dat = mat, A.samples = 1:3, B.samples = 4:6)
mat[, 1:3]
mat[, 4:6]
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
logofMeans.between.A.B(dat = dat, A.samples = 1:3, B.samples = 4:6)
dat$Mean.A <- apply(dat[,A.samples], 1, function(r) {(mean(r))})
dat$Mean.A <- apply(dat[,1:3], 1, function(r) {(mean(r))})
dat$Mean.A
dat$Mean.A <- apply(dat[,1], 1, function(r) {(mean(r))})
dat$Mean.A <- apply(dat[,1:2], 1, function(r) {(mean(r))})
dat
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
dat$Mean.A <- apply(dat[,1:3], 1, function(r) {(mean(r))})
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
dat <- as.dataframe(dat)
logofMeans.between.A.B(dat = dat, A.samples = 1:3, B.samples = 4:6)
dat$Mean.A <- apply(dat[,1:3], 1, function(r) {(mean(r))})
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
dat <- as.dataframe(dat)
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
#colnames(mat) <- c("WT_1","WT_2","WT_3","WT_4","WT_5","WT_6")
dat <- as.data.frame(dat)
dat
logofMeans.between.A.B(dat = dat, A.samples = 1:3, B.samples = 4:6)
dat$Mean.A <- apply(dat[,1:3], 1, function(r) {(mean(r))})
devtools::document()
devtools::build_site()
devtools::load_all()
dat <- matrix(rnorm(600, sd = 0.3), ncol = 6)
dat <- as.data.frame(dat)
logofMeans.between.A.B(dat = dat, A.samples = 1:3, B.samples = 4:6)
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::check()
devtools::document()
devtools::build_site()
devtools::document()
devtools::build_site()
devtools::document()
devtools::check()
library(BiocCheck)
BiocCheck()
library(BiocCheck)
devtools::load_all()
devtools::check()
BiocCheck()
devtools::document()
devtools::load_all()
BiocCheck()
devtools::document()
BiocCheck()
sessioninfo::session_info()%>%
details::details(
summary = 'Current session info',
open    = TRUE
)
library(details)
install.packages("details")
library(details)
sessioninfo::session_info()%>%
details::details(
summary = 'Current session info',
open    = TRUE
)
usethis::add_package(details)
library(usethis)
usethis::add_package(details, min_version = TRUE)
usethis::add_package("details", min_version = TRUE)
usethis::use_package("details", type="Imports", min_version = TRUE)
devtools::document()
usethis::use_package("details", type="Imports", min_version = TRUE)
devtools::document()
?use_vignette
usethis::use_vignette("my-vignette")
devtools::load_all()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
BiocCheck()
devtools::load_all()
devtools::document()
BiocCheck()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
library(BiocCheck)
BiocCheck()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
use_package("sessioninfo", type = "Imports", min_version = TRUE)
usethis::use_package("sessioninfo", type = "Imports", min_version = TRUE)
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
library(BiocCheck)
BiocCheck()
devtools::load_all()
devtools::document()
BiocCheck()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
library(BiocCheck)
BiocCheck()
devtools::document()
devtools::load_all()
devtools::build_site()
devtools::document()
devtools::load_all()
devtools::check()
BiocCheck()
devtools::load_all()
devtools::document()
BiocCheck()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::check()
BiocCheck()
devtools::load_all()
devtools::document()
devtools::load_all()
## packages
rm(list = ls())
setwd("C:/Users/danie/Documents/longene2/R")
## packages
rm(list = ls())
setwd("C:/Users/danie/Downloads/OverlapPlots-main/OverlapPlots/R")
## annotation dataset
load(file = "../dat-info/mm10_ncbi-refSeqGene_Dec2019.RData")
genotypes <- factor(c(rep("WT", 10), rep("KO", 10)), levels = c("KO", "WT"))
dat <- read.table("../dat/counts/GSE128178_10WT_10MeCP2_KO_whole_cell_RNAseq_exon_counts.txt",
sep = "\t", stringsAsFactors=FALSE, header = TRUE,
row.names = 1)
wholeCell.KO <- DESeqCalculation(dat = dat, genotypes = genotypes, fc = 1.15)
mat <- wholeCell.KO$results[,c(8:27,1,3)]
colnames(mat)[21] <- "gene.name"
## same cluster sizes
grp.idx <- WTgrp_kmeans(control_mat = mat[,1:10])
res1 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 200,
shift.size = 40)
res1$plot
### Using the DEGs list
degs.dat <- read.table("../dat/DEGs/KO-WT_whole-cell_RNA-seq.txt", sep = "\t",
stringsAsFactors=FALSE, header = TRUE, row.names = 1)
degs.dat <- degs.dat[degs.dat$FDR < 0.05,]
cat("Number of DEGs =",dim(degs.dat)[1],"\n\n")
degs.dat <- inner_join(degs.dat %>% rownames_to_column(var = "gene.name"),
refseq, by = "gene.name")
Plot.Scatter(dat = degs.dat[,c("gene.name","logFC", "FDR", "gene.length")],
log2FC = log2(1), comp.between = "")
Plot.Scatter(dat = degs.dat[,c("gene.name","logFC", "FDR", "gene.length")],
log2FC = log2(1.2), comp.between = "")
degs.dat <- inner_join(x = wholeCell.KO$results[wholeCell.KO$results$gene %in%
degs.dat$gene.name,c(8:27,1,3)],
y = degs.dat[,c("gene.name", "logFC")],
by = c("gene" = "gene.name"))
mat <- degs.dat[,c(1:21,23)]
colnames(mat)[21] <- "gene.name"
### logFC from Degs from edgeR (Boxer et al.) and
### much closer to the Boxer et al. paper
colnames(mat)[22] <- "log2FoldChange"
res2 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 60,
shift.size = 6, shrink_lfc = TRUE)
res2$plot
### logFC from Degs from DESeq2
mat <- degs.dat[,c(1:22)]
colnames(mat)[21] <- "gene.name"
res3 <- overlap_wrapper(dat = mat, refseq = refseq, KO.idx = c(11:20),
WT.idx = c(1:10), WT1.idx = grp.idx$WT.idx1,
WT2.idx = grp.idx$WT.idx2, bin.size = 60,
shift.size = 6, shrink_lfc = TRUE)
res3$plot
rm(dat, wholeCell.KO, mat, grp.idx, degs.dat)
dat <- read.table("../dat/counts/GSE128178_10WT_10MeCP2_KO_nuclear_RNAseq_gene_body_counts.txt",
sep = "\t", stringsAsFactors=FALSE, header = TRUE,
row.names = 1)
devtools::load_all()
devtools::check()
devtools::document()
devtools::build_site()
library(DESeq2)
??DESeq2
devtools::document()
devtools::build_site()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::document()
devtools::build_site()
devtools::load_all()
devtools::build_site()
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::build_site()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
usethis::use_package(package = "devtools", type = "Suggests", add.version = TRUE)
usethis::use_package(package = "devtools", type = "Suggests", min_version = TRUE)
devtools::document()
devtools::load_all()
devtools::check()
library(BiocCheck)
BiocCheck()
devtools::build_site()
